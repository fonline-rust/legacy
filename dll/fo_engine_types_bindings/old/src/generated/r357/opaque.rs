/* automatically generated by rust-bindgen */

#[allow(unused_imports)] use super::*;


#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct Mutex {
    pub _bindgen_opaque_blob: [u32; 6usize],
}
#[test]
fn bindgen_test_layout_Mutex() {
    assert_eq!(
        ::std::mem::size_of::<Mutex>(),
        24usize,
        concat!("Size of: ", stringify!(Mutex))
    );
    assert_eq!(
        ::std::mem::align_of::<Mutex>(),
        4usize,
        concat!("Alignment of ", stringify!(Mutex))
    );
}
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct Spinlock {
    pub _bindgen_opaque_blob: u32,
}
#[test]
fn bindgen_test_layout_Spinlock() {
    assert_eq!(
        ::std::mem::size_of::<Spinlock>(),
        4usize,
        concat!("Size of: ", stringify!(Spinlock))
    );
    assert_eq!(
        ::std::mem::align_of::<Spinlock>(),
        4usize,
        concat!("Alignment of ", stringify!(Spinlock))
    );
}
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct SyncObj {
    pub _bindgen_opaque_blob: u32,
}
#[test]
fn bindgen_test_layout_SyncObj() {
    assert_eq!(
        ::std::mem::size_of::<SyncObj>(),
        4usize,
        concat!("Size of: ", stringify!(SyncObj))
    );
    assert_eq!(
        ::std::mem::align_of::<SyncObj>(),
        4usize,
        concat!("Alignment of ", stringify!(SyncObj))
    );
}
