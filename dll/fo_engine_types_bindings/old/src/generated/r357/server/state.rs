/* automatically generated by rust-bindgen */

#[allow(unused_imports)] use super::*;


pub type CritterMutual = Critter;
#[repr(C)]
pub struct GameOptions {
    pub YearStart: uint16,
    pub YearStartFTLo: uint,
    pub YearStartFTHi: uint,
    pub Year: uint16,
    pub Month: uint16,
    pub Day: uint16,
    pub Hour: uint16,
    pub Minute: uint16,
    pub Second: uint16,
    pub FullSecondStart: uint,
    pub FullSecond: uint,
    pub TimeMultiplier: uint16,
    pub GameTimeTick: uint,
    pub DisableTcpNagle: bool,
    pub DisableZlibCompression: bool,
    pub FloodSize: uint,
    pub NoAnswerShuffle: bool,
    pub DialogDemandRecheck: bool,
    pub FixBoyDefaultExperience: uint,
    pub SneakDivider: uint,
    pub LevelCap: uint,
    pub LevelCapAddExperience: bool,
    pub LookNormal: uint,
    pub LookMinimum: uint,
    pub GlobalMapMaxGroupCount: uint,
    pub CritterIdleTick: uint,
    pub TurnBasedTick: uint,
    pub DeadHitPoints: ::std::os::raw::c_int,
    pub Breaktime: uint,
    pub TimeoutTransfer: uint,
    pub TimeoutBattle: uint,
    pub ApRegeneration: uint,
    pub RtApCostCritterWalk: uint,
    pub RtApCostCritterRun: uint,
    pub RtApCostMoveItemContainer: uint,
    pub RtApCostMoveItemInventory: uint,
    pub RtApCostPickItem: uint,
    pub RtApCostDropItem: uint,
    pub RtApCostReloadWeapon: uint,
    pub RtApCostPickCritter: uint,
    pub RtApCostUseItem: uint,
    pub RtApCostUseSkill: uint,
    pub RtAlwaysRun: bool,
    pub TbApCostCritterMove: uint,
    pub TbApCostMoveItemContainer: uint,
    pub TbApCostMoveItemInventory: uint,
    pub TbApCostPickItem: uint,
    pub TbApCostDropItem: uint,
    pub TbApCostReloadWeapon: uint,
    pub TbApCostPickCritter: uint,
    pub TbApCostUseItem: uint,
    pub TbApCostUseSkill: uint,
    pub TbAlwaysRun: bool,
    pub ApCostAimEyes: uint,
    pub ApCostAimHead: uint,
    pub ApCostAimGroin: uint,
    pub ApCostAimTorso: uint,
    pub ApCostAimArms: uint,
    pub ApCostAimLegs: uint,
    pub RunOnCombat: bool,
    pub RunOnTransfer: bool,
    pub GlobalMapWidth: uint,
    pub GlobalMapHeight: uint,
    pub GlobalMapZoneLength: uint,
    pub GlobalMapMoveTime: uint,
    pub BagRefreshTime: uint,
    pub AttackAnimationsMinDist: uint,
    pub WhisperDist: uint,
    pub ShoutDist: uint,
    pub LookChecks: ::std::os::raw::c_int,
    pub LookDir: [uint; 5usize],
    pub LookSneakDir: [uint; 5usize],
    pub LookWeight: uint,
    pub CustomItemCost: bool,
    pub RegistrationTimeout: uint,
    pub AccountPlayTime: uint,
    pub LoggingVars: bool,
    pub ScriptRunSuspendTimeout: uint,
    pub ScriptRunMessageTimeout: uint,
    pub TalkDistance: uint,
    pub NpcMaxTalkers: uint,
    pub MinNameLength: uint,
    pub MaxNameLength: uint,
    pub DlgTalkMinTime: uint,
    pub DlgBarterMinTime: uint,
    pub MinimumOfflineTime: uint,
    pub StartSpecialPoints: ::std::os::raw::c_int,
    pub StartTagSkillPoints: ::std::os::raw::c_int,
    pub SkillMaxValue: ::std::os::raw::c_int,
    pub SkillModAdd2: ::std::os::raw::c_int,
    pub SkillModAdd3: ::std::os::raw::c_int,
    pub SkillModAdd4: ::std::os::raw::c_int,
    pub SkillModAdd5: ::std::os::raw::c_int,
    pub SkillModAdd6: ::std::os::raw::c_int,
    pub AbsoluteOffsets: bool,
    pub SkillBegin: uint,
    pub SkillEnd: uint,
    pub TimeoutBegin: uint,
    pub TimeoutEnd: uint,
    pub KillBegin: uint,
    pub KillEnd: uint,
    pub PerkBegin: uint,
    pub PerkEnd: uint,
    pub AddictionBegin: uint,
    pub AddictionEnd: uint,
    pub KarmaBegin: uint,
    pub KarmaEnd: uint,
    pub DamageBegin: uint,
    pub DamageEnd: uint,
    pub TraitBegin: uint,
    pub TraitEnd: uint,
    pub ReputationBegin: uint,
    pub ReputationEnd: uint,
    pub ReputationLoved: ::std::os::raw::c_int,
    pub ReputationLiked: ::std::os::raw::c_int,
    pub ReputationAccepted: ::std::os::raw::c_int,
    pub ReputationNeutral: ::std::os::raw::c_int,
    pub ReputationAntipathy: ::std::os::raw::c_int,
    pub ReputationHated: ::std::os::raw::c_int,
    pub MapHexagonal: bool,
    pub MapHexWidth: ::std::os::raw::c_int,
    pub MapHexHeight: ::std::os::raw::c_int,
    pub MapHexLineHeight: ::std::os::raw::c_int,
    pub MapTileOffsX: ::std::os::raw::c_int,
    pub MapTileOffsY: ::std::os::raw::c_int,
    pub MapRoofOffsX: ::std::os::raw::c_int,
    pub MapRoofOffsY: ::std::os::raw::c_int,
    pub MapRoofSkipSize: ::std::os::raw::c_int,
    pub MapCameraAngle: f32,
    pub MapSmoothPath: bool,
    pub MapDataPrefix: ScriptString,
    pub Quit: bool,
    pub OpenGLDebug: bool,
    pub AssimpLogging: bool,
    pub MouseX: ::std::os::raw::c_int,
    pub MouseY: ::std::os::raw::c_int,
    pub ScrOx: ::std::os::raw::c_int,
    pub ScrOy: ::std::os::raw::c_int,
    pub ShowTile: bool,
    pub ShowRoof: bool,
    pub ShowItem: bool,
    pub ShowScen: bool,
    pub ShowWall: bool,
    pub ShowCrit: bool,
    pub ShowFast: bool,
    pub ShowPlayerNames: bool,
    pub ShowNpcNames: bool,
    pub ShowCritId: bool,
    pub ScrollKeybLeft: bool,
    pub ScrollKeybRight: bool,
    pub ScrollKeybUp: bool,
    pub ScrollKeybDown: bool,
    pub ScrollMouseLeft: bool,
    pub ScrollMouseRight: bool,
    pub ScrollMouseUp: bool,
    pub ScrollMouseDown: bool,
    pub ShowGroups: bool,
    pub HelpInfo: bool,
    pub DebugInfo: bool,
    pub DebugNet: bool,
    pub DebugSprites: bool,
    pub FullScreen: bool,
    pub VSync: bool,
    pub FlushVal: ::std::os::raw::c_int,
    pub BaseTexture: ::std::os::raw::c_int,
    pub Light: ::std::os::raw::c_int,
    pub Host: ScriptString,
    pub Port: uint,
    pub ProxyType: uint,
    pub ProxyHost: ScriptString,
    pub ProxyPort: uint,
    pub ProxyUser: ScriptString,
    pub ProxyPass: ScriptString,
    pub Name: ScriptString,
    pub ScrollDelay: ::std::os::raw::c_int,
    pub ScrollStep: uint,
    pub ScrollCheck: bool,
    pub FoDataPath: ScriptString,
    pub FixedFPS: ::std::os::raw::c_int,
    pub MsgboxInvert: bool,
    pub ChangeLang: ::std::os::raw::c_int,
    pub DefaultCombatMode: uint8,
    pub MessNotify: bool,
    pub SoundNotify: bool,
    pub AlwaysOnTop: bool,
    pub TextDelay: uint,
    pub DamageHitDelay: uint,
    pub ScreenWidth: ::std::os::raw::c_int,
    pub ScreenHeight: ::std::os::raw::c_int,
    pub MultiSampling: ::std::os::raw::c_int,
    pub MouseScroll: bool,
    pub IndicatorType: ::std::os::raw::c_int,
    pub DoubleClickTime: uint,
    pub RoofAlpha: uint8,
    pub HideCursor: bool,
    pub DisableLMenu: bool,
    pub DisableMouseEvents: bool,
    pub DisableKeyboardEvents: bool,
    pub HidePassword: bool,
    pub PlayerOffAppendix: ScriptString,
    pub CombatMessagesType: ::std::os::raw::c_int,
    pub DisableDrawScreens: bool,
    pub Animation3dSmoothTime: uint,
    pub Animation3dFPS: uint,
    pub RunModMul: ::std::os::raw::c_int,
    pub RunModDiv: ::std::os::raw::c_int,
    pub RunModAdd: ::std::os::raw::c_int,
    pub MapZooming: bool,
    pub SpritesZoom: f32,
    pub SpritesZoomMax: f32,
    pub SpritesZoomMin: f32,
    pub EffectValues: [f32; 10usize],
    pub AlwaysRun: bool,
    pub AlwaysRunMoveDist: ::std::os::raw::c_int,
    pub AlwaysRunUseDist: ::std::os::raw::c_int,
    pub KeyboardRemap: ScriptString,
    pub CritterFidgetTime: uint,
    pub Anim2CombatBegin: uint,
    pub Anim2CombatIdle: uint,
    pub Anim2CombatEnd: uint,
    pub ClientPath: ScriptString,
    pub ServerPath: ScriptString,
    pub ShowCorners: bool,
    pub ShowCuttedSprites: bool,
    pub ShowDrawOrder: bool,
    pub SplitTilesCollection: bool,
    pub CritterChangeParameter:
        ::std::option::Option<unsafe extern "C" fn(cr: *mut Critter, index: uint)>,
    pub CritterTypes: *mut CritterType,
    pub ClientMap: *mut Field,
    pub ClientMapLight: *mut uint8,
    pub ClientMapWidth: uint,
    pub ClientMapHeight: uint,
    pub GetDrawingSprites:
        ::std::option::Option<unsafe extern "C" fn(count: *mut uint) -> *mut *mut Sprite>,
    pub GetSpriteInfo: ::std::option::Option<unsafe extern "C" fn(sprId: uint) -> *mut SpriteInfo>,
    pub GetSpriteColor: ::std::option::Option<
        unsafe extern "C" fn(
            sprId: uint,
            x: ::std::os::raw::c_int,
            y: ::std::os::raw::c_int,
            affectZoom: bool,
        ) -> uint,
    >,
    pub IsSpriteHit: ::std::option::Option<
        unsafe extern "C" fn(
            sprite: *mut Sprite,
            x: ::std::os::raw::c_int,
            y: ::std::os::raw::c_int,
            checkEgg: bool,
        ) -> bool,
    >,
    pub GetNameByHash:
        ::std::option::Option<unsafe extern "C" fn(hash: uint) -> *const ::std::os::raw::c_char>,
    pub GetHashByName:
        ::std::option::Option<unsafe extern "C" fn(name: *const ::std::os::raw::c_char) -> uint>,
    pub ScriptLoadModule: ::std::option::Option<
        unsafe extern "C" fn(moduleName: *const ::std::os::raw::c_char) -> bool,
    >,
    pub ScriptBind: ::std::option::Option<
        unsafe extern "C" fn(
            moduleName: *const ::std::os::raw::c_char,
            funcDecl: *const ::std::os::raw::c_char,
            temporaryId: bool,
        ) -> uint,
    >,
    pub ScriptPrepare: ::std::option::Option<unsafe extern "C" fn(bindId: uint) -> bool>,
    pub ScriptSetArgInt8: ::std::option::Option<unsafe extern "C" fn(value: int8)>,
    pub ScriptSetArgInt16: ::std::option::Option<unsafe extern "C" fn(value: int16)>,
    pub ScriptSetArgInt: ::std::option::Option<unsafe extern "C" fn(value: ::std::os::raw::c_int)>,
    pub ScriptSetArgInt64: ::std::option::Option<unsafe extern "C" fn(value: int64)>,
    pub ScriptSetArgUInt8: ::std::option::Option<unsafe extern "C" fn(value: uint8)>,
    pub ScriptSetArgUInt16: ::std::option::Option<unsafe extern "C" fn(value: uint16)>,
    pub ScriptSetArgUInt: ::std::option::Option<unsafe extern "C" fn(value: uint)>,
    pub ScriptSetArgUInt64: ::std::option::Option<unsafe extern "C" fn(value: uint64)>,
    pub ScriptSetArgBool: ::std::option::Option<unsafe extern "C" fn(value: bool)>,
    pub ScriptSetArgFloat: ::std::option::Option<unsafe extern "C" fn(value: f32)>,
    pub ScriptSetArgDouble: ::std::option::Option<unsafe extern "C" fn(value: f64)>,
    pub ScriptSetArgObject:
        ::std::option::Option<unsafe extern "C" fn(value: *mut ::std::os::raw::c_void)>,
    pub ScriptSetArgAddress:
        ::std::option::Option<unsafe extern "C" fn(value: *mut ::std::os::raw::c_void)>,
    pub ScriptRunPrepared: ::std::option::Option<unsafe extern "C" fn() -> bool>,
    pub ScriptGetReturnedInt8: ::std::option::Option<unsafe extern "C" fn() -> int8>,
    pub ScriptGetReturnedInt16: ::std::option::Option<unsafe extern "C" fn() -> int16>,
    pub ScriptGetReturnedInt:
        ::std::option::Option<unsafe extern "C" fn() -> ::std::os::raw::c_int>,
    pub ScriptGetReturnedInt64: ::std::option::Option<unsafe extern "C" fn() -> int64>,
    pub ScriptGetReturnedUInt8: ::std::option::Option<unsafe extern "C" fn() -> uint8>,
    pub ScriptGetReturnedUInt16: ::std::option::Option<unsafe extern "C" fn() -> uint16>,
    pub ScriptGetReturnedUInt: ::std::option::Option<unsafe extern "C" fn() -> uint>,
    pub ScriptGetReturnedUInt64: ::std::option::Option<unsafe extern "C" fn() -> uint64>,
    pub ScriptGetReturnedBool: ::std::option::Option<unsafe extern "C" fn() -> bool>,
    pub ScriptGetReturnedFloat: ::std::option::Option<unsafe extern "C" fn() -> f32>,
    pub ScriptGetReturnedDouble: ::std::option::Option<unsafe extern "C" fn() -> f64>,
    pub ScriptGetReturnedObject:
        ::std::option::Option<unsafe extern "C" fn() -> *mut ::std::os::raw::c_void>,
    pub ScriptGetReturnedAddress:
        ::std::option::Option<unsafe extern "C" fn() -> *mut ::std::os::raw::c_void>,
    pub GetUseApCost: ::std::option::Option<
        unsafe extern "C" fn(cr: *mut CritterMutual, item: *mut Item, mode: uint8) -> uint,
    >,
    pub GetAttackDistantion: ::std::option::Option<
        unsafe extern "C" fn(cr: *mut CritterMutual, item: *mut Item, mode: uint8) -> uint,
    >,
}
#[test]
fn bindgen_test_layout_GameOptions() {
    assert_eq!(
        ::std::mem::size_of::<GameOptions>(),
        1312usize,
        concat!("Size of: ", stringify!(GameOptions))
    );
    assert_eq!(
        ::std::mem::align_of::<GameOptions>(),
        4usize,
        concat!("Alignment of ", stringify!(GameOptions))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).YearStart as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(YearStart)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).YearStartFTLo as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(YearStartFTLo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).YearStartFTHi as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(YearStartFTHi)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Year as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Year)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Month as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Month)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Day as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Day)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Hour as *const _ as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Hour)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Minute as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Minute)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Second as *const _ as usize },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Second)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).FullSecondStart as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(FullSecondStart)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).FullSecond as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(FullSecond)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TimeMultiplier as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TimeMultiplier)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GameTimeTick as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GameTimeTick)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DisableTcpNagle as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DisableTcpNagle)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).DisableZlibCompression as *const _ as usize
        },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DisableZlibCompression)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).FloodSize as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(FloodSize)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).NoAnswerShuffle as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(NoAnswerShuffle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DialogDemandRecheck as *const _ as usize },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DialogDemandRecheck)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).FixBoyDefaultExperience as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(FixBoyDefaultExperience)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SneakDivider as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SneakDivider)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).LevelCap as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(LevelCap)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).LevelCapAddExperience as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(LevelCapAddExperience)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).LookNormal as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(LookNormal)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).LookMinimum as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(LookMinimum)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).GlobalMapMaxGroupCount as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GlobalMapMaxGroupCount)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).CritterIdleTick as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(CritterIdleTick)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TurnBasedTick as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TurnBasedTick)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DeadHitPoints as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DeadHitPoints)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Breaktime as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Breaktime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TimeoutTransfer as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TimeoutTransfer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TimeoutBattle as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TimeoutBattle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ApRegeneration as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ApRegeneration)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RtApCostCritterWalk as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostCritterWalk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RtApCostCritterRun as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostCritterRun)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).RtApCostMoveItemContainer as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostMoveItemContainer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).RtApCostMoveItemInventory as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostMoveItemInventory)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RtApCostPickItem as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostPickItem)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RtApCostDropItem as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostDropItem)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).RtApCostReloadWeapon as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostReloadWeapon)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RtApCostPickCritter as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostPickCritter)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RtApCostUseItem as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostUseItem)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RtApCostUseSkill as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtApCostUseSkill)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RtAlwaysRun as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RtAlwaysRun)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TbApCostCritterMove as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbApCostCritterMove)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).TbApCostMoveItemContainer as *const _ as usize
        },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbApCostMoveItemContainer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).TbApCostMoveItemInventory as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbApCostMoveItemInventory)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TbApCostPickItem as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbApCostPickItem)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TbApCostDropItem as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbApCostDropItem)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).TbApCostReloadWeapon as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbApCostReloadWeapon)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TbApCostPickCritter as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbApCostPickCritter)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TbApCostUseItem as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbApCostUseItem)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TbApCostUseSkill as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbApCostUseSkill)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TbAlwaysRun as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TbAlwaysRun)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ApCostAimEyes as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ApCostAimEyes)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ApCostAimHead as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ApCostAimHead)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ApCostAimGroin as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ApCostAimGroin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ApCostAimTorso as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ApCostAimTorso)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ApCostAimArms as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ApCostAimArms)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ApCostAimLegs as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ApCostAimLegs)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RunOnCombat as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RunOnCombat)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RunOnTransfer as *const _ as usize },
        217usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RunOnTransfer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GlobalMapWidth as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GlobalMapWidth)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GlobalMapHeight as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GlobalMapHeight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GlobalMapZoneLength as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GlobalMapZoneLength)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GlobalMapMoveTime as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GlobalMapMoveTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).BagRefreshTime as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(BagRefreshTime)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).AttackAnimationsMinDist as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AttackAnimationsMinDist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).WhisperDist as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(WhisperDist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShoutDist as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShoutDist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).LookChecks as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(LookChecks)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).LookDir as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(LookDir)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).LookSneakDir as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(LookSneakDir)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).LookWeight as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(LookWeight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).CustomItemCost as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(CustomItemCost)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RegistrationTimeout as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RegistrationTimeout)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).AccountPlayTime as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AccountPlayTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).LoggingVars as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(LoggingVars)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptRunSuspendTimeout as *const _ as usize
        },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptRunSuspendTimeout)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptRunMessageTimeout as *const _ as usize
        },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptRunMessageTimeout)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TalkDistance as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TalkDistance)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).NpcMaxTalkers as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(NpcMaxTalkers)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MinNameLength as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MinNameLength)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MaxNameLength as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MaxNameLength)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DlgTalkMinTime as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DlgTalkMinTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DlgBarterMinTime as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DlgBarterMinTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MinimumOfflineTime as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MinimumOfflineTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).StartSpecialPoints as *const _ as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(StartSpecialPoints)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).StartTagSkillPoints as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(StartTagSkillPoints)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SkillMaxValue as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SkillMaxValue)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SkillModAdd2 as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SkillModAdd2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SkillModAdd3 as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SkillModAdd3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SkillModAdd4 as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SkillModAdd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SkillModAdd5 as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SkillModAdd5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SkillModAdd6 as *const _ as usize },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SkillModAdd6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).AbsoluteOffsets as *const _ as usize },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AbsoluteOffsets)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SkillBegin as *const _ as usize },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SkillBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SkillEnd as *const _ as usize },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SkillEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TimeoutBegin as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TimeoutBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TimeoutEnd as *const _ as usize },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TimeoutEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).KillBegin as *const _ as usize },
        404usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(KillBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).KillEnd as *const _ as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(KillEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).PerkBegin as *const _ as usize },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(PerkBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).PerkEnd as *const _ as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(PerkEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).AddictionBegin as *const _ as usize },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AddictionBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).AddictionEnd as *const _ as usize },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AddictionEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).KarmaBegin as *const _ as usize },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(KarmaBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).KarmaEnd as *const _ as usize },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(KarmaEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DamageBegin as *const _ as usize },
        436usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DamageBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DamageEnd as *const _ as usize },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DamageEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TraitBegin as *const _ as usize },
        444usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TraitBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TraitEnd as *const _ as usize },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TraitEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ReputationBegin as *const _ as usize },
        452usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ReputationBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ReputationEnd as *const _ as usize },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ReputationEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ReputationLoved as *const _ as usize },
        460usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ReputationLoved)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ReputationLiked as *const _ as usize },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ReputationLiked)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ReputationAccepted as *const _ as usize },
        468usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ReputationAccepted)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ReputationNeutral as *const _ as usize },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ReputationNeutral)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ReputationAntipathy as *const _ as usize },
        476usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ReputationAntipathy)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ReputationHated as *const _ as usize },
        480usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ReputationHated)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapHexagonal as *const _ as usize },
        484usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapHexagonal)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapHexWidth as *const _ as usize },
        488usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapHexWidth)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapHexHeight as *const _ as usize },
        492usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapHexHeight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapHexLineHeight as *const _ as usize },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapHexLineHeight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapTileOffsX as *const _ as usize },
        500usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapTileOffsX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapTileOffsY as *const _ as usize },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapTileOffsY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapRoofOffsX as *const _ as usize },
        508usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapRoofOffsX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapRoofOffsY as *const _ as usize },
        512usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapRoofOffsY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapRoofSkipSize as *const _ as usize },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapRoofSkipSize)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapCameraAngle as *const _ as usize },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapCameraAngle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapSmoothPath as *const _ as usize },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapSmoothPath)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapDataPrefix as *const _ as usize },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapDataPrefix)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Quit as *const _ as usize },
        560usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Quit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).OpenGLDebug as *const _ as usize },
        561usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(OpenGLDebug)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).AssimpLogging as *const _ as usize },
        562usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AssimpLogging)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MouseX as *const _ as usize },
        564usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MouseX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MouseY as *const _ as usize },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MouseY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrOx as *const _ as usize },
        572usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrOx)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrOy as *const _ as usize },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrOy)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowTile as *const _ as usize },
        580usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowTile)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowRoof as *const _ as usize },
        581usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowRoof)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowItem as *const _ as usize },
        582usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowItem)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowScen as *const _ as usize },
        583usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowScen)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowWall as *const _ as usize },
        584usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowWall)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowCrit as *const _ as usize },
        585usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowCrit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowFast as *const _ as usize },
        586usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowFast)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowPlayerNames as *const _ as usize },
        587usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowPlayerNames)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowNpcNames as *const _ as usize },
        588usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowNpcNames)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowCritId as *const _ as usize },
        589usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowCritId)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollKeybLeft as *const _ as usize },
        590usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollKeybLeft)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollKeybRight as *const _ as usize },
        591usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollKeybRight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollKeybUp as *const _ as usize },
        592usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollKeybUp)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollKeybDown as *const _ as usize },
        593usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollKeybDown)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollMouseLeft as *const _ as usize },
        594usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollMouseLeft)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollMouseRight as *const _ as usize },
        595usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollMouseRight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollMouseUp as *const _ as usize },
        596usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollMouseUp)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollMouseDown as *const _ as usize },
        597usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollMouseDown)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowGroups as *const _ as usize },
        598usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowGroups)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).HelpInfo as *const _ as usize },
        599usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(HelpInfo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DebugInfo as *const _ as usize },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DebugInfo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DebugNet as *const _ as usize },
        601usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DebugNet)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DebugSprites as *const _ as usize },
        602usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DebugSprites)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).FullScreen as *const _ as usize },
        603usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(FullScreen)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).VSync as *const _ as usize },
        604usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(VSync)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).FlushVal as *const _ as usize },
        608usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(FlushVal)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).BaseTexture as *const _ as usize },
        612usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(BaseTexture)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Light as *const _ as usize },
        616usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Light)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Host as *const _ as usize },
        620usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Host)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Port as *const _ as usize },
        652usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Port)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ProxyType as *const _ as usize },
        656usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ProxyType)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ProxyHost as *const _ as usize },
        660usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ProxyHost)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ProxyPort as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ProxyPort)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ProxyUser as *const _ as usize },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ProxyUser)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ProxyPass as *const _ as usize },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ProxyPass)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Name as *const _ as usize },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollDelay as *const _ as usize },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollDelay)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollStep as *const _ as usize },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollStep)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScrollCheck as *const _ as usize },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScrollCheck)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).FoDataPath as *const _ as usize },
        804usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(FoDataPath)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).FixedFPS as *const _ as usize },
        836usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(FixedFPS)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MsgboxInvert as *const _ as usize },
        840usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MsgboxInvert)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ChangeLang as *const _ as usize },
        844usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ChangeLang)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DefaultCombatMode as *const _ as usize },
        848usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DefaultCombatMode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MessNotify as *const _ as usize },
        849usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MessNotify)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SoundNotify as *const _ as usize },
        850usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SoundNotify)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).AlwaysOnTop as *const _ as usize },
        851usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AlwaysOnTop)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).TextDelay as *const _ as usize },
        852usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(TextDelay)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DamageHitDelay as *const _ as usize },
        856usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DamageHitDelay)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScreenWidth as *const _ as usize },
        860usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScreenWidth)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScreenHeight as *const _ as usize },
        864usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScreenHeight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MultiSampling as *const _ as usize },
        868usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MultiSampling)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MouseScroll as *const _ as usize },
        872usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MouseScroll)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).IndicatorType as *const _ as usize },
        876usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(IndicatorType)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DoubleClickTime as *const _ as usize },
        880usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DoubleClickTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RoofAlpha as *const _ as usize },
        884usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RoofAlpha)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).HideCursor as *const _ as usize },
        885usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(HideCursor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DisableLMenu as *const _ as usize },
        886usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DisableLMenu)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DisableMouseEvents as *const _ as usize },
        887usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DisableMouseEvents)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).DisableKeyboardEvents as *const _ as usize
        },
        888usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DisableKeyboardEvents)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).HidePassword as *const _ as usize },
        889usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(HidePassword)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).PlayerOffAppendix as *const _ as usize },
        892usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(PlayerOffAppendix)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).CombatMessagesType as *const _ as usize },
        924usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(CombatMessagesType)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).DisableDrawScreens as *const _ as usize },
        928usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(DisableDrawScreens)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).Animation3dSmoothTime as *const _ as usize
        },
        932usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Animation3dSmoothTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Animation3dFPS as *const _ as usize },
        936usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Animation3dFPS)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RunModMul as *const _ as usize },
        940usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RunModMul)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RunModDiv as *const _ as usize },
        944usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RunModDiv)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).RunModAdd as *const _ as usize },
        948usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(RunModAdd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).MapZooming as *const _ as usize },
        952usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(MapZooming)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SpritesZoom as *const _ as usize },
        956usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SpritesZoom)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SpritesZoomMax as *const _ as usize },
        960usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SpritesZoomMax)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).SpritesZoomMin as *const _ as usize },
        964usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SpritesZoomMin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).EffectValues as *const _ as usize },
        968usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(EffectValues)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).AlwaysRun as *const _ as usize },
        1008usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AlwaysRun)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).AlwaysRunMoveDist as *const _ as usize },
        1012usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AlwaysRunMoveDist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).AlwaysRunUseDist as *const _ as usize },
        1016usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(AlwaysRunUseDist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).KeyboardRemap as *const _ as usize },
        1020usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(KeyboardRemap)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).CritterFidgetTime as *const _ as usize },
        1052usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(CritterFidgetTime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Anim2CombatBegin as *const _ as usize },
        1056usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Anim2CombatBegin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Anim2CombatIdle as *const _ as usize },
        1060usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Anim2CombatIdle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).Anim2CombatEnd as *const _ as usize },
        1064usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(Anim2CombatEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ClientPath as *const _ as usize },
        1068usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ClientPath)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ServerPath as *const _ as usize },
        1100usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ServerPath)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowCorners as *const _ as usize },
        1132usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowCorners)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowCuttedSprites as *const _ as usize },
        1133usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowCuttedSprites)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ShowDrawOrder as *const _ as usize },
        1134usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ShowDrawOrder)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).SplitTilesCollection as *const _ as usize
        },
        1135usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(SplitTilesCollection)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).CritterChangeParameter as *const _ as usize
        },
        1136usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(CritterChangeParameter)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).CritterTypes as *const _ as usize },
        1140usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(CritterTypes)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ClientMap as *const _ as usize },
        1144usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ClientMap)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ClientMapLight as *const _ as usize },
        1148usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ClientMapLight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ClientMapWidth as *const _ as usize },
        1152usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ClientMapWidth)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ClientMapHeight as *const _ as usize },
        1156usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ClientMapHeight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GetDrawingSprites as *const _ as usize },
        1160usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GetDrawingSprites)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GetSpriteInfo as *const _ as usize },
        1164usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GetSpriteInfo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GetSpriteColor as *const _ as usize },
        1168usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GetSpriteColor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).IsSpriteHit as *const _ as usize },
        1172usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(IsSpriteHit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GetNameByHash as *const _ as usize },
        1176usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GetNameByHash)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GetHashByName as *const _ as usize },
        1180usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GetHashByName)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptLoadModule as *const _ as usize },
        1184usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptLoadModule)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptBind as *const _ as usize },
        1188usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptBind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptPrepare as *const _ as usize },
        1192usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptPrepare)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgInt8 as *const _ as usize },
        1196usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgInt8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgInt16 as *const _ as usize },
        1200usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgInt16)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgInt as *const _ as usize },
        1204usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgInt)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgInt64 as *const _ as usize },
        1208usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgInt64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgUInt8 as *const _ as usize },
        1212usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgUInt8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgUInt16 as *const _ as usize },
        1216usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgUInt16)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgUInt as *const _ as usize },
        1220usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgUInt)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgUInt64 as *const _ as usize },
        1224usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgUInt64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgBool as *const _ as usize },
        1228usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgBool)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgFloat as *const _ as usize },
        1232usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgFloat)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgDouble as *const _ as usize },
        1236usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgDouble)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgObject as *const _ as usize },
        1240usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgObject)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptSetArgAddress as *const _ as usize },
        1244usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptSetArgAddress)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).ScriptRunPrepared as *const _ as usize },
        1248usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptRunPrepared)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedInt8 as *const _ as usize
        },
        1252usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedInt8)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedInt16 as *const _ as usize
        },
        1256usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedInt16)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedInt as *const _ as usize
        },
        1260usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedInt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedInt64 as *const _ as usize
        },
        1264usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedInt64)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedUInt8 as *const _ as usize
        },
        1268usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedUInt8)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedUInt16 as *const _ as usize
        },
        1272usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedUInt16)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedUInt as *const _ as usize
        },
        1276usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedUInt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedUInt64 as *const _ as usize
        },
        1280usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedUInt64)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedBool as *const _ as usize
        },
        1284usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedBool)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedFloat as *const _ as usize
        },
        1288usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedFloat)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedDouble as *const _ as usize
        },
        1292usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedDouble)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedObject as *const _ as usize
        },
        1296usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedObject)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<GameOptions>())).ScriptGetReturnedAddress as *const _ as usize
        },
        1300usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(ScriptGetReturnedAddress)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GetUseApCost as *const _ as usize },
        1304usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GetUseApCost)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GameOptions>())).GetAttackDistantion as *const _ as usize },
        1308usize,
        concat!(
            "Offset of field: ",
            stringify!(GameOptions),
            "::",
            stringify!(GetAttackDistantion)
        )
    );
}
#[repr(C)]
pub struct CritterType {
    pub Enabled: bool,
    pub Name: [::std::os::raw::c_char; 64usize],
    pub SoundName: [::std::os::raw::c_char; 64usize],
    pub Alias: uint,
    pub Multihex: uint,
    pub AnimType: ::std::os::raw::c_int,
    pub CanWalk: bool,
    pub CanRun: bool,
    pub CanAim: bool,
    pub CanArmor: bool,
    pub CanRotate: bool,
    pub Anim1: [bool; 37usize],
}
#[test]
fn bindgen_test_layout_CritterType() {
    assert_eq!(
        ::std::mem::size_of::<CritterType>(),
        188usize,
        concat!("Size of: ", stringify!(CritterType))
    );
    assert_eq!(
        ::std::mem::align_of::<CritterType>(),
        4usize,
        concat!("Alignment of ", stringify!(CritterType))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).Enabled as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(Enabled)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).Name as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(Name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).SoundName as *const _ as usize },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(SoundName)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).Alias as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(Alias)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).Multihex as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(Multihex)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).AnimType as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(AnimType)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).CanWalk as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(CanWalk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).CanRun as *const _ as usize },
        145usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(CanRun)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).CanAim as *const _ as usize },
        146usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(CanAim)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).CanArmor as *const _ as usize },
        147usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(CanArmor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).CanRotate as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(CanRotate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CritterType>())).Anim1 as *const _ as usize },
        149usize,
        concat!(
            "Offset of field: ",
            stringify!(CritterType),
            "::",
            stringify!(Anim1)
        )
    );
}
