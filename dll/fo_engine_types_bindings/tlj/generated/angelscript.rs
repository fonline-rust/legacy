/* automatically generated by rust-bindgen 0.59.2 */

#[allow(unused_imports)] use super::*;


pub type asBYTE = ::std::os::raw::c_uchar;
pub type asDWORD = ::std::os::raw::c_ulong;
#[repr(C)]
pub struct ScriptString__bindgen_vtable(::std::os::raw::c_void);
#[repr(C)]
pub struct ScriptString {
    pub vtable_: *const ScriptString__bindgen_vtable,
    pub buffer: stlp_std_string,
    pub refCount: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_ScriptString() {
    assert_eq!(
        ::std::mem::size_of::<ScriptString>(),
        32usize,
        concat!("Size of: ", stringify!(ScriptString))
    );
    assert_eq!(
        ::std::mem::align_of::<ScriptString>(),
        4usize,
        concat!("Alignment of ", stringify!(ScriptString))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScriptString>())).buffer as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ScriptString),
            "::",
            stringify!(buffer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScriptString>())).refCount as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(ScriptString),
            "::",
            stringify!(refCount)
        )
    );
}
